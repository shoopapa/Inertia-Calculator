{"version":3,"sources":["Board2.js","Grid.js","PolyLines.js","Axis.js","Poly.js","calc.js","App.js","index.js"],"names":["Point","x","y","remove","size","l","setHoverPoint","useState","r","setr","onMouseEnter","onMouseLeave","onClick","cx","cy","fill","Board2","points","setPoints","dw","snap","calcI","getCord","e","rect","target","getBoundingClientRect","dx","dy","Math","abs","roundToSnap","clientX","left","clientY","top","removePoint","console","log","keep","width","height","xmlns","p","newPoints","bind","Object","values","map","key","Grid","id","patternUnits","d","stroke","strokeWidth","PolyLines","pp","_","i","length","x1","y1","x2","y2","style","MAxis","m","x0","y0","h","color","PXAxis","PYAxis","Axis","I","centriod","x_cen","y_cen","slope2","tan","PI","ILocx","raw_ang","slope1","ILocy","Poly","gridSize","renderFit","comp","className","math","create","all","polygeom","xm","mean","ym","xp","yp","a","A","sum","xc","yc","Ixx","Iyy","Ixy","Iuu","Ivv","Iuv","J","eig","Numeric","lambda","I1","I2","vec","E","_ang1","atan2","ang1","_ang2","ang2","parseFloat","ang_horz","getGridSize","wH","window","innerHeight","wW","innerWidth","w","round","App","accuracy","setDw","setGridSize","hoverPoint","calc","setCalc","changeDw","up","newDw","fontSize","toFixed","keys","data","forEach","toString","printPoints","dw2","dw4","renderList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8812378.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport \"./Board.css\"\n\n\nconst Point = ({x, y, remove, size, l, setHoverPoint }) => {\n  size = size? size : 4\n  const [r, setr] = useState(size)\n  return (\n    <circle \n      onMouseEnter={() => {setr(size + .3*size); setHoverPoint({x,y})}}\n      onMouseLeave={() => {setr(size); setHoverPoint({x,y})}}\n      onClick={ () => { remove(l); setr(size) } }\n      cx={x}\n      cy={y} \n      r={r}\n      fill= '#ffffff' \n    />\n  );\n}\n\nconst roundToSnap = (x,y,snap, dw) => {\n    let dx = x%dw\n    dx = dx <= snap? dx : dx - dw\n    let dy = y%dw\n    dy = dy <= snap? dy : dy - dw\n\n    if ( (Math.abs(dx) <= snap ) && (Math.abs(dy)) <= snap ) {\n      x = x - dx\n      y = y - dy\n    } \n\n    return [x,y]\n}\n\nconst Board2 = ({points, setPoints, dw, snap, calcI, setHoverPoint}) => {\n\n  const getCord = e => {\n    const rect = e.target.getBoundingClientRect();\n    let x = e.clientX - rect.left; //x position within the element.\n    let y = e.clientY - rect.top;  //y position within the element.\n    const r = roundToSnap(x,y,snap,dw)\n\n    return {x:r[0],y:r[1]}\n  }\n\n  const addPoint = e => {\n    const rect = e.target.getBoundingClientRect();\n    if(!(rect.width < 20)) {\n      const p = getCord(e)\n      // console.log(p.x,p.y)\n      const newPoints = {...points, [ `${p.x} ${p.y}` ]:{ x:p.x ,y:p.y} }\n      calcI(newPoints)\n      setPoints( newPoints )\n    }\n  }\n\n  const removePoint = (l) => {\n    console.log(l)\n    const {[l]:bye, ...keep} = points\n    calcI( keep )\n    setPoints( keep )\n  }\n\n  const renderPoints = () => { return (\n    Object.values(points).map(e=>{\n      const l = `${e.x} ${e.y}`\n      return (\n        <Point\n          l={l} \n          key={l}\n          setHoverPoint={setHoverPoint}\n          remove={removePoint}\n          x={e.x}\n          y={e.y}\n        />\n      )\n    })\n  )}\n\n  return (\n    <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n      onClick = { addPoint.bind(this) }\n    >\n      {renderPoints()}\n    </svg>\n  );\n}\n\nexport default Board2;\n","import React from 'react'\n\nconst Grid = ({dw}) => {\n  return (\n    <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n      <pattern id=\"grid\" width={dw} height={dw} patternUnits=\"userSpaceOnUse\">\n        <rect width={dw} height={dw} fill=\"url(#smallGrid)\"/>\n        <path d={`M ${dw} 0 L 0 0 0 ${dw}`} fill=\"none\" stroke=\"gray\" strokeWidth=\"1\"/>\n      </pattern>\n    </defs>\n    <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n    </svg>\n  );\n}\n\nexport default Grid\n","import React from 'react'\n\nconst PolyLines = ({points,height}) => {\n  const p = Object.values(points)\n  const pp = p.map((_,i) => (i === p.length - 1) ? p[0] : p[i+1])\n\n  const line = () => {\n    return (\n      p.map( (_,i)=> { \n        return (\n          <line \n            key={i}\n            x1={p[i].x} \n            y1={p[i].y} \n            x2={pp[i].x} \n            y2={pp[i].y}\n            style={{\n              stroke:(i === p.length-1)? 'rgb(15, 143, 255)' : \"rgb(176, 200, 221)\",\n              strokeWidth:2 \n            }}\n          />\n      )})\n    )\n  }\n\n  return (\n    <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\n      {line() }\n    </svg>\n  );\n}\n\nexport default PolyLines\n","import React from 'react'\n\nconst MAxis = ({m,x0,y0,h,color}) => { return (\n  <line \n    x1={ 0             } \n    y1={ y0-m*x0     } \n    x2={ h             } \n    y2={ m*( h - x0)+y0 }\n    style={{\n      stroke:color,\n      strokeWidth:1\n    }}\n  />\n)}\n\nconst PXAxis = ({x0, h, color}) => { return (\n  <line \n    x1={ x0  } \n    y1={ 0   } \n    x2={ x0  } \n    y2={  h  }\n    style={{\n      stroke: color? color : \"white\",\n      strokeWidth:1\n    }}\n  />\n)}\n\nconst PYAxis = ({y0, h, color}) => { return (\n  <line \n    x1={  0   } \n    y1={  y0  } \n    x2={  h   } \n    y2={  y0  }\n    style={{\n      stroke: color? color : \"white\" ,\n      strokeWidth:1\n    }}\n  />\n)}\n\nconst Axis = ({height, I}) => {\n  const h = height\n  let {x_cen:x0, y_cen:y0} = I.centriod\n  const slope2 = -Math.tan(Math.PI/180 * (I.ILocx.raw_ang))\n  const slope1 = -Math.tan(Math.PI/180 * (I.ILocy.raw_ang))\n  // console.log(slope1,slope2)\n\n\n  const renderPrincple = () => { return (\n    <g>\n      <MAxis \n        m={slope1}\n        h={height}\n        x0={x0}\n        y0={h-y0}\n        color=\"red\"\n      />\n      <MAxis \n        m={slope2}\n        h={height}\n        x0={x0}\n        y0={h-y0}\n        color=\"green\"\n      />\n    </g>\n  )}\n\n  const renderParallel = () => { return (\n    <g>\n      <PYAxis \n        h={height}\n        x0={x0}\n        y0={h-y0}\n        color=\"white\"\n      />\n      <PXAxis \n        h={height}\n        x0={x0}\n        y0={h-y0}\n        color=\"white\"\n      />\n    </g>\n  )}\n\n  return (\n    <svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\n      {( slope1 === 0 || slope2 === 0)? \"\" : renderPrincple()}\n      {renderParallel()}\n  \n    </svg>\n  );\n}\n\nexport default Axis\n","import React from 'react';\nimport Board2 from \"./Board2.js\";\nimport Grid from './Grid.js';\nimport PolyLines from './PolyLines'\nimport './App.css';\nimport './Board.css'\nimport Axis from './Axis.js'\n\nconst Poly = ({ points, setPoints, I, gridSize, calcI, dw, setHoverPoint, snap}) => {\n\n  const renderFit = (comp) => {return (\n    <div  \n        className='Overlay'\n        style={{ width:gridSize + 1 ,  height:gridSize +1 }} \n      >\n        {comp}\n      </div>\n  )}\n\n  return (\n    <div className='Grid'\n      style={{ width:gridSize,  height:gridSize}} \n    >\n      { renderFit(<Grid dw={dw}/>) }\n\n      { ( I !== \"no\")? renderFit( <Axis points={points} height={gridSize} I={I}/>): \"\"}\n\n      { renderFit( <PolyLines points={points} height={gridSize} /> ) }\n\n      { renderFit (\n        <Board2 \n          setHoverPoint={setHoverPoint}\n          dw={dw} \n          snap={snap} \n          points={points} \n          setPoints={setPoints} \n          calcI={calcI}\n        />\n      )}\n    </div>\n  );\n  \n}\n\nexport default Poly;","import Numeric from '../node_modules/numeric/numeric-1.2.6.js'\nimport { create, all } from 'mathjs'\nconst config = { }\nconst math = create(all, config)\n\nconst polygeom = (x,y,dw) => {\n\n  // temporarily shift data to mean of vertices for improved accuracy\n  const xm = math.mean(x);\n  const ym = math.mean(y);\n  x = x.map(e=> e - xm);\n  y = y.map(e=> e - ym);\n\n  //summations for CCW boundary\n  const xp = x.map((_,i) => (i === x.length -1) ? x[0] : x[i+1])\n  const yp = y.map((_,i) => (i === y.length -1) ? y[0] : y[i+1])\n  const a  = x.map((_,i) => x[i]*yp[i]-y[i]*xp[i] )\n\n  let A =  math.sum( a ) /2\n  const xc = math.sum(x.map((_,i) => ( x[i]+xp[i] ) * a[i] )) /6/A;\n  const yc = math.sum(y.map((_,i) => (y[i]+yp[i])*a[i] )) /6/A;\n  let Ixx = math.sum(x.map((_,i) => (y[i]**2 + y[i]*yp[i] + yp[i]**2)*a[i])) / 12\n  let Iyy = math.sum(y.map((_,i) => (x[i]**2 + x[i]*xp[i] + xp[i]**2)*a[i])) / 12\n  let Ixy = math.sum(y.map((_,i) => (x[i]*yp[i] +2*x[i]*y[i] +2*xp[i]*yp[i] +xp[i]*y[i])*a[i] )) /24\n\n  if (A < 0) {\n    A = -A;\n    Ixx = -Ixx;\n    Iyy = -Iyy;\n    Ixy = -Ixy;\n  }\n\n\n  const Iuu = Ixx - A*yc*yc;\n  const Ivv = Iyy - A*xc*xc;\n  const Iuv = Ixy - A*xc*yc;\n  const J = Iuu + Ivv;\n    \n  const x_cen = xc + xm;\n  const y_cen = yc + ym;\n  Ixx = Iuu + A*y_cen*y_cen;\n  Iyy = Ivv + A*x_cen*x_cen;\n  Ixy = Iuv + A*x_cen*y_cen;\n    \n\n  const I = [ \n    [Iuu, -Iuv],\n    [-Iuv, Ivv] \n  ];\n  const eig = Numeric.eig(I)\n  const { lambda:{ x:[I1,I2] }, E:{x:vec} } = eig\n\n  // console.log(vec[1][0], vec[0][0])\n  const _ang1 = (Math.atan2( vec[1][0], vec[0][0] )/Math.PI*180)\n  const ang1 = _ang1 < 0 ? _ang1+180 : _ang1\n  // console.log(_ang1,ang1)\n\n  const _ang2 = _ang1+90\n  const ang2 = ang1 > 90? ang1-90: ang1+90\n\n  const raw = {\n    centriod:{x_cen:parseFloat(x_cen ), y_cen:parseFloat(y_cen ), A:parseFloat(A )},\n    ILocx:{I:I1 , ang_horz:ang1 , raw_ang: _ang1 }, \n    ILocy:{I:I2 , ang_horz:ang2 , raw_ang: _ang2 }, \n    Iuu:parseFloat(Iuu ), Ivv:parseFloat(Ivv ), J:parseFloat(J )\n  }\n\n  return raw\n}\n\nexport default polygeom\n\n","import React, {useState} from 'react';\nimport Poly from './Poly.js'\nimport polygeom from './calc.js'\nimport './App.css';\n\nconst getGridSize = (dw) => {\n  const wH = window.innerHeight\n  const wW = window.innerWidth\n  const h = wH - .2*wH\n  const w = wW - .2*wW\n  const d = Math.round(h < w? h : w)\n  const f = d - d%dw\n\n  return f\n}\n\n\nconst printPoints = (x,y,dw) => {\n  x=x.map(e=> e/dw)\n  y=y.map(e=> e/dw)\n  let xp = \"x = [ \"\n  x.forEach(e => {\n    xp += e.toString() + \" \"\n  });\n  xp += \"]\"\n  let yp = \"y = [ \"\n  y.forEach(e => {\n    yp += e.toString() + \" \"\n  });\n  yp += \"]\"\n  console.log(xp)\n  console.log(yp)\n}\n\nconst App = () => {\n  const [accuracy, setAccuracy] = useState(3)\n  const [dw, setDw] = useState(30)\n  const [gridSize, setGridSize] = useState(getGridSize(dw))\n  const [hoverPoint, setHoverPoint] = useState({x:0,y:gridSize})\n  const [points,setPoints]= useState({})\n  const [calc, setCalc] = useState({})\n\n\n  const calcI = (points) => {\n    // console.log(gridSize)\n      if (Object.keys(points).length > 2) {\n      const x = Object.values(points).map(e => e.x)\n      const y = Object.values(points).map(e => gridSize - e.y)\n      const data = polygeom(x,y)\n\n      setCalc(data)\n      // console.log(\"Raw: \",data)\n      printPoints(x,y,dw)\n    }\n  }\n\n  const renderList = () => {\n    const dw2 = dw**2\n    const dw4 = dw**4\n\n    return (\n      <ul>\n        <li>\n          {\"Area: \" + (calc.centriod.A/dw2).toFixed(accuracy) }\n        </li>\n        <li>\n          {`Cen:  (${(calc.centriod.x_cen/dw).toFixed(accuracy)}, ${(calc.centriod.y_cen/dw).toFixed(accuracy)})` }\n        </li>\n        <li>\n          {\"Ix:    \" + (calc.Iuu/dw4).toFixed(accuracy) }\n        </li>\n        <li>\n          {\"Iy:    \" + (calc.Ivv/dw4).toFixed(accuracy) }\n        </li>\n        <li>\n          {\"J:     \" + (calc.J/dw4).toFixed(accuracy) }\n        </li>\n        <li style ={{color:\"red\"}}>\n          { `I₁:    ${(calc.ILocy.I/dw4).toFixed(accuracy)} ∡ ${(calc.ILocy.ang_horz).toFixed(accuracy)}°`}\n        </li>\n        <li style ={{color:\"green\"}}>\n          { `I₂:    ${(calc.ILocx.I/dw4).toFixed(accuracy)} ∡ ${(calc.ILocx.ang_horz).toFixed(accuracy)}°`}\n        </li>\n      </ul>\n    )\n  }\n\n  const changeDw = (up) => {\n    const newDw = up? dw-5: dw+5\n    setDw(newDw)\n    setGridSize(getGridSize(newDw))\n  }\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        <p style={{fontSize:\"1.5vh\"}}>\n          {`(${(hoverPoint.x/dw).toFixed(accuracy)}, ${((gridSize-hoverPoint.y)/dw).toFixed(accuracy)})`}\n        </p>\n        <Poly \n          setHoverPoint={setHoverPoint}\n          calcI={calcI}\n          points={points}\n          setPoints={setPoints}\n          I={Object.keys(points).length > 2? calc : \"no\"}\n          gridSize={gridSize}\n          dw={dw}\n          snap={dw/4}\n        />\n        <div className=\"Grid-size\">\n        <button onClick={() => changeDw(false)}>-</button>\n          <p style={{fontSize:\"1.5vh\"}}>\n            {`${((gridSize )/dw)}x${((gridSize )/dw)}`}\n          </p>\n          <button onClick={() => changeDw(true)}>+</button>\n        </div>\n      </div>\n      <></>\n      \n      <div className=\"Search\">\n        {(Object.keys(points).length > 2)? renderList() : <ul><li></li></ul> }\n      </div>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}